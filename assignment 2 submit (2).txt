//////Q1

#include <iostream>
using namespace std;
unsigned int myStrLen(const char* str) {
int num=0;
while (str[num] != '\0') num++;
return num;
}
int main()
{
    char arr[] = "stephen";
    cout << myStrLen(arr) << endl;
    return 0;
}

///////Q2
#include <iostream>
using namespace std;
double average(double data[], int size) {
double tot=0;
int i=0;
for(i=0;i<=size;i++){
tot = tot + data[i];
}
return tot/size;
}
int main()
{
    double arr[] = {-4.3,7.0,10.4,3.9,1.2,9.8,11.3};
    cout << average(arr, sizeof(arr)/sizeof(arr[0])) << endl;
    return 0;
}

//////////Q3

#include <iostream>
using namespace std;
bool isPrime(unsigned int num) {

for(int i=2;i<=num/2 ;i++){
    if((num%i)==0) return 0;
}
return 1;
}
int main()
{

    cout << isPrime(15) << endl;
    return 0;
}



//////////Q4

#include <iostream>
using namespace std;
void twoDice() {
float num=0;
for(int i=1;i<=6 ;i++){
    for(int y=1;y<= 6 ;y++){
    cout << '(' << i << ',' << y << ')' ;
if ((i+y)>6)num++;
}
cout << endl;
}
cout << "Probability sum greater than 6: " << (num/(6*6))*100 << '%' << endl;
}
int main()
{
 twoDice();
return 0;
}

//////Q5

#include <iostream>
using namespace std;
void simplifyFraction(int & n, int & d) {
int num=0;
if (n>d) num=d;
else num=n;

for(int i=2;i<=num/2 ;i++){
    if((n%i)==0 && (d%i)==0){
    n = n/i;
    d = d/i;
    i=1;
    }
}
}
int main()
{
 int numer = 2340;
int denom = 832;
cout << numer << "\\" << denom << " = ";
simplifyFraction(numer, denom);
cout << numer << "\\" << denom << endl;
return 0;
}


//////////Q6

#include <iostream>
using namespace std;
string toBinaryString(int a) {
string binary = "";
int comp = 1;
if (a<0){
for(int i=0;i<=31;i++){
    if(((a>>i)&comp) == 1) binary= "1"+binary;
    else binary = "0"+binary;
}
}
else{
    for(int i=0;i<=31;i++){
    if(((a>>i)&comp)==1) binary= "1"+binary;
    else binary= "0"+binary;
    }
}
return binary;
}
int main()
{
cout << " 34 in binary is : " << toBinaryString(34) << endl;
cout << "-10 in binary is : " << toBinaryString(-10) << endl;
return 0;
}


///////Q7

#include <iostream>
using namespace std;

class Student {
private:
    string  first,second;
    int id;
public:
    Student(){
    first = "";
    second = "";
    id=0;
    }

    Student(const string fir, const string sec, int a) {
    id = a;
    first = fir;
    second = sec;
    }
    void print() {
        cout << "First Name: " << first
             << " Second Name: " << second << " Number:" << id << endl;
    }
};
int main()
{
    Student();
   Student ac1("stephen","carragher",11883);
    ac1.print();
return 0;
}

////////Q8

#include <iostream>
using namespace std;

class Student {
private:
    string  first,second;
    int id;
public:
    Student(){
    first = "";
    second = "";
    id=0;
    }
    Student(const string fir, const string sec, int a) {
    id = a;
    first = fir;
    second = sec;
    }
    void print() {
        cout << "First Name: " << first
             << " Second Name: " << second << " Number:" << id << endl;
    }
};
void printStudents(Student students[], int size) {
for(int i=0;i<size;i++){
students[i].print();
}
}
int main()
{
    Student();
   Student ac1("stephen","carragher",11883);
   Student ac2("Jordan","Mconnon",1184698);
   Student ac3("Vivek","raj",198783);
    Student arr[] = {ac1,ac2,ac3};
    printStudents(arr, sizeof(arr)/sizeof(arr[0]));
return 0;
}

//////Q9

#include <iostream>
#include <math.h>
using namespace std;
class Circle {
private:
    double a,r;
    int x,y;
public:
    bool intersects(const Circle & c){
        double xsqur=0,ysqur=0,dist=0;
        xsqur=x*c.x;
        ysqur=y*c.y;
        dist= sqrt(xsqur*ysqur);
        if(dist<=(r+c.r))return true;
        else return false;
        
        
        }
    
    Circle(int a, int b, double c) {
    x = a;
    y = b;
    r = c;
    }
    
    double area(){
        a=(3.14*r*r);
        return a;
         }
    
    void display() {
        cout << "center=(" << x  << "," << y << ")" << " radius=" << r << " area=" << (3.14*r*r) << endl;
    }
};
int main()
{
 Circle c1(0,0,1);
Circle c2(1,1,0.5);
c1.display();
c2.display();
cout << "Intersects? " << (c1.intersects(c2) ? " yes" : " no") << endl;
}


